
---
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: default
  name: rabbitmq
  annotations:
    k8s.kuboard.cn/workload: rabbitmq
    k8s.kuboard.cn/displayName: rabbitmq
    deployment.kubernetes.io/revision: '1'
    k8s.kuboard.cn/ingress: 'false'
    k8s.kuboard.cn/service: ClusterIP
  labels:
    k8s.kuboard.cn/layer: cloud
    k8s.kuboard.cn/name: rabbitmq
spec:
  selector:
    matchLabels:
      k8s.kuboard.cn/layer: cloud
      k8s.kuboard.cn/name: rabbitmq
  revisionHistoryLimit: 10
  template:
    metadata:
      labels:
        k8s.kuboard.cn/layer: cloud
        k8s.kuboard.cn/name: rabbitmq
    spec:
      securityContext:
        seLinuxOptions: {}
      imagePullSecrets: []
      restartPolicy: Always
      initContainers: []
      containers:
        - image: 'docker.io/bitnami/rabbitmq:3.8-debian-10'
          imagePullPolicy: Always
          name: rabbitmq
          volumeMounts: []
          resources:
            limits:
            requests:
          env: []
          envFrom:
            - configMapRef:
                name: rabbitmq-conf
          lifecycle: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
      volumes: []
      dnsPolicy: ClusterFirst
      dnsConfig: {}
      schedulerName: default-scheduler
      terminationGracePeriodSeconds: 30
  progressDeadlineSeconds: 600
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 25%
      maxSurge: 25%
  replicas: 1

---
apiVersion: v1
kind: Service
metadata:
  namespace: default
  name: rabbitmq
  annotations:
    k8s.kuboard.cn/workload: rabbitmq
    k8s.kuboard.cn/displayName: rabbitmq
  labels:
    k8s.kuboard.cn/layer: cloud
    k8s.kuboard.cn/name: rabbitmq
spec:
  selector:
    k8s.kuboard.cn/layer: cloud
    k8s.kuboard.cn/name: rabbitmq
  type: ClusterIP
  ports:
    - port: 5672
      targetPort: 5672
      protocol: TCP
      name: w46tnn
      nodePort: 0
    - port: 15672
      targetPort: 15672
      protocol: TCP
      name: 5ezzxd
      nodePort: 0
  sessionAffinity: None

---
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: default
  name: redis
  annotations:
    k8s.kuboard.cn/workload: redis
    k8s.kuboard.cn/displayName: redis
    deployment.kubernetes.io/revision: '1'
    k8s.kuboard.cn/ingress: 'false'
    k8s.kuboard.cn/service: ClusterIP
  labels:
    k8s.kuboard.cn/layer: cloud
    k8s.kuboard.cn/name: redis
spec:
  selector:
    matchLabels:
      k8s.kuboard.cn/layer: cloud
      k8s.kuboard.cn/name: redis
  revisionHistoryLimit: 10
  template:
    metadata:
      labels:
        k8s.kuboard.cn/layer: cloud
        k8s.kuboard.cn/name: redis
    spec:
      securityContext:
        seLinuxOptions: {}
      imagePullSecrets: []
      restartPolicy: Always
      initContainers: []
      containers:
        - image: 'redis:5.0.8'
          imagePullPolicy: Always
          name: redis
          volumeMounts:
            - name: redis-conf
              mountPath: /etc/redis/redis.conf
              subPath: redis.conf
          command:
            - redis-server
          resources:
            limits:
            requests:
          env: []
          lifecycle: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
      volumes:
        - name: redis-conf
          configMap:
            name: redis-conf
            defaultMode: 420
            items: []
      dnsPolicy: ClusterFirst
      dnsConfig: {}
      schedulerName: default-scheduler
      terminationGracePeriodSeconds: 30
  progressDeadlineSeconds: 600
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 25%
      maxSurge: 25%
  replicas: 1

---
apiVersion: v1
kind: Service
metadata:
  namespace: default
  name: redis
  annotations:
    k8s.kuboard.cn/workload: redis
    k8s.kuboard.cn/displayName: redis
  labels:
    k8s.kuboard.cn/layer: cloud
    k8s.kuboard.cn/name: redis
spec:
  selector:
    k8s.kuboard.cn/layer: cloud
    k8s.kuboard.cn/name: redis
  type: ClusterIP
  ports:
    - port: 6379
      targetPort: 6379
      protocol: TCP
      name: zydnme
      nodePort: 0
  sessionAffinity: None

---
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: default
  name: mysql
  annotations:
    k8s.kuboard.cn/workload: mysql
    k8s.kuboard.cn/displayName: mysql
    deployment.kubernetes.io/revision: '1'
    k8s.kuboard.cn/ingress: 'false'
    k8s.kuboard.cn/service: ClusterIP
  labels:
    k8s.kuboard.cn/layer: db
    k8s.kuboard.cn/name: mysql
spec:
  selector:
    matchLabels:
      k8s.kuboard.cn/layer: db
      k8s.kuboard.cn/name: mysql
  revisionHistoryLimit: 10
  template:
    metadata:
      labels:
        k8s.kuboard.cn/layer: db
        k8s.kuboard.cn/name: mysql
    spec:
      securityContext:
        seLinuxOptions: {}
      imagePullSecrets: []
      restartPolicy: Always
      initContainers: []
      containers:
        - image: 'nacos/nacos-mysql:5.7'
          imagePullPolicy: Always
          name: mysql
          volumeMounts:
            - name: mysql-data
              mountPath: /var/lib/mysql
            - name: mysql-config
              mountPath: /etc/mysql/conf.d/my.cnf
              subPath: my.cnf
          resources:
            limits:
            requests:
          env:
            - name: MYSQL_ROOT_PASSWORD
              valueFrom:
                configMapKeyRef:
                  name: mysql-conf
                  key: MYSQL_ROOT_PASSWORD
            - name: MYSQL_DATABASE
              valueFrom:
                configMapKeyRef:
                  name: mysql-conf
                  key: MYSQL_DATABASE
            - name: MYSQL_USER
              valueFrom:
                configMapKeyRef:
                  name: mysql-conf
                  key: MYSQL_USER
            - name: MYSQL_PASSWORD
              valueFrom:
                configMapKeyRef:
                  name: mysql-conf
                  key: MYSQL_PASSWORD
          lifecycle: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
      volumes:
        - name: mysql-data
          nfs:
            server: 192.168.71.130
            path: /data/nfs/mysql
        - name: mysql-config
          configMap:
            name: mysql-conf
            defaultMode: 420
            items: []
      dnsPolicy: ClusterFirst
      dnsConfig: {}
      schedulerName: default-scheduler
      terminationGracePeriodSeconds: 30
  progressDeadlineSeconds: 600
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 25%
      maxSurge: 25%
  replicas: 1

---
apiVersion: v1
kind: Service
metadata:
  namespace: default
  name: mysql
  annotations:
    k8s.kuboard.cn/workload: mysql
    k8s.kuboard.cn/displayName: mysql
  labels:
    k8s.kuboard.cn/layer: db
    k8s.kuboard.cn/name: mysql
spec:
  selector:
    k8s.kuboard.cn/layer: db
    k8s.kuboard.cn/name: mysql
  type: ClusterIP
  ports:
    - port: 3306
      targetPort: 3306
      protocol: TCP
      name: ryzhbx
      nodePort: 0
  sessionAffinity: None

